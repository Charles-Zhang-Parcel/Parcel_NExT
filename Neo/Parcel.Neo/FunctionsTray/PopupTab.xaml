<local:BaseWindow x:Class="Parcel.Neo.PopupTab"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:local="clr-namespace:Parcel.Neo"
                  mc:Ignorable="d"
                  WindowStyle="None" ResizeMode="NoResize"
                  Title="Tools" Height="300" SizeToContent="WidthAndHeight"
                  PreviewKeyDown="PopupTab_OnPreviewKeyDown"
                  MouseDown="PopupTab_OnMouseDown" MouseLeave="NodesWindow_MouseLeave"
                  DataContext="{Binding RelativeSource={RelativeSource self}}">
    <DockPanel LastChildFill="True">
        <!--Decorator Frame-->
        <DockPanel DockPanel.Dock="Top" LastChildFill="True">
            <Border Background="#1F85DE" Margin="0">
                <Label Content="Functions" Margin="0" Padding="2" Foreground="White" FontWeight="Bold" FontFamily="Tahoma"/>
            </Border>
        </DockPanel>

        <!---Node Count-->
        <StackPanel DockPanel.Dock="Bottom" Background="#97945e">
            <Label x:Name="NodeCountLabel" Content="Nodes: " FontSize="12" Margin="4, 0" Padding="0" Foreground="#142f4b" FontStyle="Italic"/>
        </StackPanel>

        <!--Search-->
        <DockPanel DockPanel.Dock="Top" LastChildFill="True">
            <Image DockPanel.Dock="Left" Width="15" Height="15" Source="/Images/MagnifyingGlass.png" ></Image>
            <TextBox x:Name="SearchTextBox" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                     PreviewKeyDown="SearchTextBox_OnPreviewKeyDown"></TextBox>
        </DockPanel>
        
        <!--Search Results-->
        <ListBox x:Name="SearchResultsListView" ItemsSource="{Binding SearchResults}" Padding="0,0,0,4"
                  Visibility="{Binding SearchResultsVisibility}" PreviewKeyDown="SearchResultsListView_OnPreviewKeyDown">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Label Content="{Binding Label}" MouseDown="SearchResultsListViewLabel_OnMouseDown" Background="Transparent" ToolTip="{Binding Tooltip}"></Label>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!--Default Catagories-->
        <!--TODO: Remove item highlight background; Consider using ItemsContainer directly-->
        <ListView x:Name="ModulesListView" Margin="0" Padding="0,0,0,4" Visibility="{Binding DefaultCategoriesVisibility}" HorizontalAlignment="Stretch">
            <ListView.Resources>
                <Style TargetType="Menu">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <DockPanel LastChildFill="True"/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>
                <Style TargetType="MenuItem">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Border x:Name="MenuItemBorder" Margin="1" Padding="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                    <Grid VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Content="{TemplateBinding Header}" ContentSource="Header" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Popup AllowsTransparency="True" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PlacementTarget="{Binding ElementName=MenuItemBorder}" HorizontalOffset="1" VerticalOffset="-1">
                                            <Border BorderBrush="#414141" Background="White" BorderThickness="1">
                                                <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter Property="Background" Value="Goldenrod"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Margin="0" Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>
    </DockPanel>
</local:BaseWindow>
